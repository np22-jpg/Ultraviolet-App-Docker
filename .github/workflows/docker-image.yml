name: Build and Push to Docker Hub

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  schedule:
    - cron: "30 12 * * 0" # Run once every Sunday

env:
  REPO: ultraviolet-node
  TEST_TAG: ${{ secrets.DOCKERUSERNAME }}/ultraviolet-node:test
  ARCH: linux/amd64,linux/arm64

jobs:
  build_and_push_docker_images:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
  
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ secrets.DOCKERUSERNAME }}/${{ env.REPO }}
          tags: |
            type=raw,value=latest
            type=raw,value=${{ github.sha }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERUSERNAME }}
          password: ${{ secrets.DOCKERPASSWORD }}

        # https://docs.docker.com/build/ci/github-actions/test-before-push/
      - name: Build and export test image to Docker
        uses: docker/build-push-action@v4
        with:
          context: .
          tags: ${{ env.TEST_TAG }}
          file: ./docker/Dockerfile
          load: true
          cache-from: type=registry,ref=${{ secrets.DOCKERUSERNAME }}/${{ env.REPO }}:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKERUSERNAME }}/${{ env.REPO }}:buildcache,mode=max
          build-args: |
              NPM_BUILD=npm ci --omit=dev --frozen-lockfile

      - name: Test
        run: |
          IMG=$(docker run --rm -d -p 8080:8080 ${{ env.TEST_TAG }});
          chmod +x ./docker/test.sh
          HOST=$(docker inspect -f '{{range.NetworkSettings.Networks}}{{.IPAddress}}{{end}}' $IMG)
          ./docker/test.sh -p 8080 -h $HOST -t 15

      - name: Build & push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./docker/Dockerfile
          platforms: ${{ env.ARCH }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ secrets.DOCKERUSERNAME }}/${{ env.REPO }}:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKERUSERNAME }}/${{ env.REPO }}:buildcache,mode=max
          build-args: |
              NPM_BUILD=npm ci --omit=dev --frozen-lockfile